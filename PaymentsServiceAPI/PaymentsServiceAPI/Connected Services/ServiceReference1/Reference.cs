//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceToken", Namespace="http://schemas.datacontract.org/2004/07/NotificationServiceAPI.Models")]
    public partial class ServiceToken : object
    {
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Email", Namespace="http://schemas.datacontract.org/2004/07/NotificationServiceAPI.Models")]
    public partial class Email : object
    {
        
        private string DestinationField;
        
        private string EmailMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination
        {
            get
            {
                return this.DestinationField;
            }
            set
            {
                this.DestinationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailMessage
        {
            get
            {
                return this.EmailMessageField;
            }
            set
            {
                this.EmailMessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SMS", Namespace="http://schemas.datacontract.org/2004/07/NotificationServiceAPI.Models")]
    public partial class SMS : object
    {
        
        private string DestinationField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination
        {
            get
            {
                return this.DestinationField;
            }
            set
            {
                this.DestinationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.NotificationService")]
    public interface NotificationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationService/Email", ReplyAction="http://tempuri.org/NotificationService/EmailResponse")]
        System.Threading.Tasks.Task<ServiceReference1.SendEmailResponse> EmailAsync(ServiceReference1.SendEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationService/SMS", ReplyAction="http://tempuri.org/NotificationService/SMSResponse")]
        System.Threading.Tasks.Task<ServiceReference1.SendSMSResponse> SMSAsync(ServiceReference1.SendSMSRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendEmailRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendEmailRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ServiceReference1.ServiceToken ServiceToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.Email Message;
        
        public SendEmailRequest()
        {
        }
        
        public SendEmailRequest(ServiceReference1.ServiceToken ServiceToken, ServiceReference1.Email Message)
        {
            this.ServiceToken = ServiceToken;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendEmailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendEmailResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Response;
        
        public SendEmailResponse()
        {
        }
        
        public SendEmailResponse(string Response)
        {
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSMSRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSMSRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ServiceReference1.ServiceToken ServiceToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.SMS Message;
        
        public SendSMSRequest()
        {
        }
        
        public SendSMSRequest(ServiceReference1.ServiceToken ServiceToken, ServiceReference1.SMS Message)
        {
            this.ServiceToken = ServiceToken;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSMSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSMSResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Response;
        
        public SendSMSResponse()
        {
        }
        
        public SendSMSResponse(string Response)
        {
            this.Response = Response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    public interface NotificationServiceChannel : ServiceReference1.NotificationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    public partial class NotificationServiceClient : System.ServiceModel.ClientBase<ServiceReference1.NotificationService>, ServiceReference1.NotificationService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NotificationServiceClient() : 
                base(NotificationServiceClient.GetDefaultBinding(), NotificationServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_NotificationService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), NotificationServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SendEmailResponse> ServiceReference1.NotificationService.EmailAsync(ServiceReference1.SendEmailRequest request)
        {
            return base.Channel.EmailAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SendEmailResponse> EmailAsync(ServiceReference1.ServiceToken ServiceToken, ServiceReference1.Email Message)
        {
            ServiceReference1.SendEmailRequest inValue = new ServiceReference1.SendEmailRequest();
            inValue.ServiceToken = ServiceToken;
            inValue.Message = Message;
            return ((ServiceReference1.NotificationService)(this)).EmailAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SendSMSResponse> ServiceReference1.NotificationService.SMSAsync(ServiceReference1.SendSMSRequest request)
        {
            return base.Channel.SMSAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SendSMSResponse> SMSAsync(ServiceReference1.ServiceToken ServiceToken, ServiceReference1.SMS Message)
        {
            ServiceReference1.SendSMSRequest inValue = new ServiceReference1.SendSMSRequest();
            inValue.ServiceToken = ServiceToken;
            inValue.Message = Message;
            return ((ServiceReference1.NotificationService)(this)).SMSAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_NotificationService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_NotificationService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/NotificationService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return NotificationServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_NotificationService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return NotificationServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_NotificationService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_NotificationService,
        }
    }
}
